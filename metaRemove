#!/bin/bash

# This script monitors the Download/Screenshot directories for file creation events. 
# When a new file is detected, it removes all metadata from the file, then 
#     generates a new random name for the file.

# Define the directories to be monitored
dir_to_watch1="$HOME/Downloads"
dir_to_watch2="$HOME/Pictures/Screenshots"

generate_random_string() {
    # Function to generate a random filename string:
    #     Use /dev/urandom for random character generation
    #     filter for alphanumeric characters
    #     limit string length to 12-20 characters

    length=$(( RANDOM % 9 + 12 ))
    cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w $length | head -n 1
}

process_file() {
    local dir_to_watch=$1
    local file=$2

    # Ignore temporary files created by exiftool
    if [[ "$file" == *"_exiftool_tmp" ]]; then
        return
    fi

    # Use exiftool to remove all metadata from the newly created file
    exiftool -overwrite_original -all= "$dir_to_watch/${file}" ; wait

    # Retrieve the true file extension using exiftool and convert it to lowercase for uniformity
    ext=$(exiftool -s3 -FileType "$dir_to_watch/${file}" | tr '[:upper:]' '[:lower:]') ; wait

    # Generate a random string for the new filename
    new_filename="$(generate_random_string).$ext" ; wait

    # Rename the original file with the new filename
    mv "$dir_to_watch/$file" "$dir_to_watch/$new_filename" ; wait

    # Verify and display the new metadata of the renamed file
    exiftool "$dir_to_watch/$new_filename"
}

# Monitor the specified directories for file creation events in parallel
inotifywait -m "$dir_to_watch1" -e create |
    while read path action file; do
        process_file "$dir_to_watch1" "$file" &
    done &

inotifywait -m "$dir_to_watch2" -e create |
    while read path action file; do
        process_file "$dir_to_watch2" "$file" &
    done &
